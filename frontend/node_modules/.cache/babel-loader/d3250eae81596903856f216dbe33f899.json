{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergalev/Desktop/MERN_Project/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport './NewPlace.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nconst formReducer = (state, action);\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters)\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/Users/alexandergalev/Desktop/MERN_Project/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","NewPlace","inputs","title","value","isValid","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,8BAHP;AAKA,MAAMC,WAAW,IAAIC,KAAK,EAAEC,MAAX,CAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBP,EAAAA,UAAU,CAACI,WAAD,EAAc;AACtBI,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OADD;AAKNC,MAAAA,WAAW,EAAE;AACXF,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,OAAO,EAAE;AAFE;AALP,KADc;AAWtBA,IAAAA,OAAO,EAAE;AAXa,GAAd,CAAV;AAaA,QAAME,iBAAiB,GAAGd,WAAW,CAAC,CAACe,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;AACA,QAAMI,uBAAuB,GAAGhB,WAAW,CAAC,CAACe,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;AACA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,UAAU,EAAE,CAACR,iBAAiB,EAAlB,CALd;AAME,IAAA,SAAS,EAAC,4BANZ;AAOE,IAAA,OAAO,EAAEU,iBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,UAAU,EAAE,CAACX,mBAAmB,CAAC,CAAD,CAApB,CAJd;AAKE,IAAA,SAAS,EAAC,0DALZ;AAME,IAAA,OAAO,EAAEa,uBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAqBD,CArCD;;AAuCA,eAAeR,QAAf","sourcesContent":["import React, { useCallback, useReducer } from 'react'\n\nimport './NewPlace.css'\nimport Input from '../../shared/components/FormElements/Input'\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators'\n\nconst formReducer = (state, action)\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    isValid: false,\n  })\n  const titleInputHandler = useCallback((id, value, isValid) => {}, [])\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, [])\n  return (\n    <form className='place-form'>\n      <Input\n        id='title'\n        element='input'\n        type='text'\n        label='Title'\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText='Please enter a valid title'\n        onInput={titleInputHandler}\n      />\n      <Input\n        id='description'\n        element='textarea'\n        label='Description'\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText='Please enter a valid description (at least 5 characters)'\n        onInput={descriptionInputHandler}\n      />\n    </form>\n  )\n}\n\nexport default NewPlace\n"]},"metadata":{},"sourceType":"module"}