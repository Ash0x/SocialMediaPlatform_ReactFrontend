{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergalev/Desktop/MERN_Project/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport './NewPlace.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const input in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters)\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/Users/alexandergalev/Desktop/MERN_Project/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","input","inputs","inputId","isValid","value","NewPlace","title","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,8BAHP;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,KAAX,IAAoBJ,KAAK,CAACK,MAA1B,EAAkC;AAChC,YAAIC,OAAO,KAAKL,MAAM,CAACK,OAAvB,EAAgC;AAC9BH,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACM,OAApC;AACD,SAFD,MAEO;AACLJ,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaC,OAAb,EAAsBC,OAAnD;AACD;AACF;;AACD,aAAO,EAAC,GAAGP,KAAJ;AACPK,QAAAA,MAAM,EAAE,EACN,GAAGL,KAAK,CAACK,MADH;AAEN,WAACJ,MAAM,CAACK,OAAR,GAAkB;AAACE,YAAAA,KAAK,EAAEP,MAAM,CAACO,KAAf;AAAsBD,YAAAA,OAAO,EAAEN,MAAM,CAACM;AAAtC;AAFZ;AADD,OAAP;;AAKF;AACE,aAAOP,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,MAAMS,QAAQ,GAAG,MAAM;AACrBd,EAAAA,UAAU,CAACI,WAAD,EAAc;AACtBM,IAAAA,MAAM,EAAE;AACNK,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,EADF;AAELD,QAAAA,OAAO,EAAE;AAFJ,OADD;AAKNI,MAAAA,WAAW,EAAE;AACXH,QAAAA,KAAK,EAAE,EADI;AAEXD,QAAAA,OAAO,EAAE;AAFE;AALP,KADc;AAWtBA,IAAAA,OAAO,EAAE;AAXa,GAAd,CAAV;AAaA,QAAMK,iBAAiB,GAAGlB,WAAW,CAAC,CAACmB,EAAD,EAAKL,KAAL,EAAYD,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;AACA,QAAMO,uBAAuB,GAAGpB,WAAW,CAAC,CAACmB,EAAD,EAAKL,KAAL,EAAYD,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;AACA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,UAAU,EAAE,CAACT,iBAAiB,EAAlB,CALd;AAME,IAAA,SAAS,EAAC,4BANZ;AAOE,IAAA,OAAO,EAAEc,iBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,UAAU,EAAE,CAACf,mBAAmB,CAAC,CAAD,CAApB,CAJd;AAKE,IAAA,SAAS,EAAC,0DALZ;AAME,IAAA,OAAO,EAAEiB,uBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAqBD,CArCD;;AAuCA,eAAeL,QAAf","sourcesContent":["import React, { useCallback, useReducer } from 'react'\n\nimport './NewPlace.css'\nimport Input from '../../shared/components/FormElements/Input'\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators'\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true\n      for (const input in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid\n        }\n      }\n      return {...state,\n      inputs: {\n        ...state.inputs,\n        [action.inputId]: {value: action.value, isValid: action.isValid}\n      }}\n    default:\n      return state\n  }\n}\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    isValid: false,\n  })\n  const titleInputHandler = useCallback((id, value, isValid) => {}, [])\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, [])\n  return (\n    <form className='place-form'>\n      <Input\n        id='title'\n        element='input'\n        type='text'\n        label='Title'\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText='Please enter a valid title'\n        onInput={titleInputHandler}\n      />\n      <Input\n        id='description'\n        element='textarea'\n        label='Description'\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText='Please enter a valid description (at least 5 characters)'\n        onInput={descriptionInputHandler}\n      />\n    </form>\n  )\n}\n\nexport default NewPlace\n"]},"metadata":{},"sourceType":"module"}